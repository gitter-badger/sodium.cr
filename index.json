{"repository_name":"github.com/didactic-drunk/sodium.cr","body":"# sodium.cr\n[![Build Status](https://travis-ci.org/didactic-drunk/sodium.cr.svg?branch=master)](https://travis-ci.org/didactic-drunk/sodium.cr)\n[![GitHub release](https://img.shields.io/github/release/didactic-drunk/sodium.cr.svg)](https://github.com/didactic-drunk/sodium.cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://didactic-drunk.github.io/sodium.cr/)\n\nCrystal bindings for the [libsodium API](https://libsodium.gitbook.io/doc/)\n\n## Goals\n\n* Provide the most commonly used libsodium API's.\n* Provide an easy to use API based on reviewing most other [libsodium bindings](https://libsodium.gitbook.io/doc/bindings_for_other_languages).\n* Test for compatibility against other libsodium bindings to ensure interoperability.\n* Always provide a stream interface to handle arbitrarily sized data when one is available.\n* Drop in replacement classes compatible with OpenSSL::{Digest,Cipher} when possible.\n* Use the newest system packaged libsodium or download the most recent stable version without manual configuration.\n\n## Features\n\n- [Public-Key Cryptography](https://libsodium.gitbook.io/doc/public-key_cryptography)\n  - [x] ☑ [Crypto Box Easy](https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption)\n  - [x] [Sealed Box](https://libsodium.gitbook.io/doc/public-key_cryptography/sealed_boxes)\n  - [ ] [Combined Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n  - [x] ☑ [Detached Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n  - [ ] [Pre-hashed Signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n- [Secret-Key Cryptography](https://libsodium.gitbook.io/doc/secret-key_cryptography)\n  - Secret Box\n    - [x] ☑ [Combined mode](https://libsodium.gitbook.io/doc/secret-key_cryptography/authenticated_encryption)\n    - [ ] [Detached mode](https://libsodium.gitbook.io/doc/secret-key_cryptography/authenticated_encryption)\n  - [x] [Secret Stream](https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream)\n  - [AEAD](https://libsodium.gitbook.io/doc/secret-key_cryptography/aead)\n   - [ ] AES256-GCM (Requires hardware acceleration)\n   - [ ] XChaCha20-Poly1305-IETF\n   - [ ] ChaCha20-Poly1305-IETF\n   - [ ] ChaCha20-Poly1305\n- [Hashing](https://libsodium.gitbook.io/doc/hashing)\n  - [x] ☑ [Blake2b](https://libsodium.gitbook.io/doc/hashing/generic_hashing)\n    - [x] Complete libsodium implementation including `key`, `salt`, `personal` and fully selectable output sizes.\n  - [ ] [SipHash](https://libsodium.gitbook.io/doc/hashing/short-input_hashing)\n- [Password Hashing](https://libsodium.gitbook.io/doc/password_hashing)\n  - [x] ☑ [Argon2](https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function) (Use for new applications)\n  - [ ] [Scrypt](https://libsodium.gitbook.io/doc/advanced/scrypt) (For compatibility with older applications)\n- Other\n  - [x] [Key Derivation](https://libsodium.gitbook.io/doc/key_derivation)\n  - [ ] [Key Exchange](https://libsodium.gitbook.io/doc/key_exchange)\n- [Advanced](https://libsodium.gitbook.io/doc/advanced)\n  - [Stream Ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers)\n    - [x] XSalsa20\n    - [x] Salsa20\n    - [x] XChaCha20\n    - [x] ChaCha20 Ietf\n    - [x] ChaCha20\n  - [ ] [One time auth](https://libsodium.gitbook.io/doc/advanced/poly1305)\n  - [ ] Padding\n- Library features\n  - [x] Faster builds by requiring what you need (`require \"sodium/secret_box\"`)\n  - [x] Nonce reuse detection.\n  - [x] All SecretKey's held in libsodium guarded memory.\n  - [ ] Controlled memory wiping (by calling `.close`)\n\n☑ Indicate specs are compared against test vectors from another source.\n\nSeveral features in libsodium are already provided by Crystal:\n* Random (Use [Random::Secure](https://crystal-lang.org/api/latest/Random/Secure.html))\n* SHA-2 (Use [OpenSSL::Digest](https://crystal-lang.org/api/latest/OpenSSL/Digest.html))\n* HMAC SHA-2 (Use [OpenSSL::HMAC](https://crystal-lang.org/api/latest/OpenSSL/HMAC.html))\n* Hex conversion (Use [String#hexbytes](https://crystal-lang.org/api/latest/String.html#hexbytes%3ABytes-instance-method))\n\n\n## What should I use for my application?\n\n| Class | |\n| --- | --- |\n| Only use `CryptoBox::SecretKey` `Sign::SecretKey` `SecretBox` | I don't know much about crypto. |\n| [`Sodium::CryptoBox::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/CryptoBox/SecretKey.html) .box | I want to encrypt + authenticate data using public key encryption. |\n| [`Sodium::CryptoBox::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/CryptoBox/PublicKey.html) .encrypt | I want anonymously send encrypted data. (No signatures) |\n| [`Sodium::Sign::SecretKey`](https://didactic-drunk.github.io/sodium.cr/Sodium/Sign/SecretKey.html) | I want to sign or verify messages. (No encryption) |\n| [`Sodium::SecretBox`](https://didactic-drunk.github.io/sodium.cr/Sodium/SecretBox.html) | I have a shared key and want to encrypt + authenticate data. |\n| [`Sodium::Cipher::SecretStream`](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/SecretStream/XChaCha20Poly1305.html), AEAD | I have a shared key and want encrypt + authenticate streamed data. |\n| [`Sodium::Digest::Blake2b`](https://didactic-drunk.github.io/sodium.cr/Sodium/Digest::Blake2b.html) | I want to hash data fast and securely. |\n| `Sodium::Digest::SipHash` | I want to hash data really fast and less securely. (Not implemented yet) |\n| [`Sodium::Pwhash`](https://didactic-drunk.github.io/sodium.cr/Sodium/Pwhash.html) | I want to hash a password and store it. |\n| [`Sodium::Pwhash`](https://didactic-drunk.github.io/sodium.cr/Sodium/Pwhash.html) | I want to derive a key from a password. |\n| [`Sodium::Kdf`](https://didactic-drunk.github.io/sodium.cr/Sodium/Kdf.html) | I have a high quality master key and want to make subkeys. |\n| [`Sodium::Cipher::Chalsa`](https://didactic-drunk.github.io/sodium.cr/Sodium/Cipher/Chalsa.html) | What goes with guacamole? |\n| Everything else | I want to design my own crypto protocol and probably do it wrong. |\n\n\n## Installation\n\n**[Optionally Install libsodium.](https://download.libsodium.org/doc/installation/)**\nA recent version of libsodium is automatically downloaded and compiled if you don't install your own version.\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  sodium.cr:\n    github: didactic-drunk/sodium.cr\n```\n\n\n## Usage\n\nSee `examples` for help on using these classes in a complete application.\n\nThe `specs` provide the best examples of how to use or misuse individual classes.\n\n\n\nYou may call `.close` on any object that retains keying material to wipe it's key(s) earlier.\nObjects with a  `.close` method also respond to `Class.open` and wipe when the block returns.\n\n```crystal\n# TODO\nSodium::CryptoBox::SecretKey.open(sec_key, pub_key) do |secret_key|\n ... Do crypto operations ...\nend\n# sec_key is wiped\n# public keys aren't wiped.\n\n```\n\n### CryptoBox authenticated easy encryption\n```crystal\nrequire \"sodium\"\n\ndata = \"Hello World!\"\n\n# Alice is the sender\nalice = Sodium::CryptoBox::SecretKey.new\n\n# Bob is the recipient\nbob = Sodium::CryptoBox::SecretKey.new\n\n# Precompute a shared secret between alice and bob.\nbox = alice.box bob.public_key\n\n# Encrypt a message for Bob using his public key, signing it with Alice's\n# secret key\nnonce, encrypted = box.encrypt data\n\n# Precompute within a block.  The shared secret is wiped when the block exits.\nbob.box alice.public_key do |box|\n  # Decrypt the message using Bob's secret key, and verify its signature against\n  # Alice's public key\n  decrypted = Sodium.decrypt(encrypted, nonce, alice.public, bob.secret)\n\n  String.new(decrypted) # => \"Hello World!\"\nend\n```\n\n### Unauthenticated public key encryption\n```crystal\ndata = \"Hello World!\"\n\n# Bob is the recipient\nbob = Sodium::CryptoBox::SecretKey.new\n\n# Encrypt a message for Bob using his public key\nencrypted = bob.public_key.encrypt data\n\n# Decrypt the message using Bob's secret key\ndecrypted = bob.decrypt encrypted\nString.new(decrypted) # => \"Hello World!\"\n```\n\n### Public key signing\n```crystal\nmessage = \"Hello World!\"\n\nsecret_key = Sodium::Sign::SecretKey.new\n\n# Sign the message\nsignature = secret_key.sign_detached message\n\n# Send secret_key.public_key to the recipient\n\n# On the recipient\npublic_key = Sodium::Sign::PublicKey.new key_bytes\n\n# raises Sodium::Error::VerificationFailed on failure.\npublic_key.verify_detached message, signature\n```\n\n### Secret Key Encryption\n```crystal\nkey = Sodium::SecretKey.new\n\nmessage = \"foobar\"\nencrypted, nonce = key.encrypt message\n\n# On the other side.\nkey = Sodium::SecretKey.new key\nmessage = key.decrypt encrypted, nonce\n```\n\n### Blake2b\n```crystal\nkey = Bytes.new Sodium::Digest::Blake2B::KEY_SIZE\nsalt = Bytes.new Sodium::Digest::Blake2B::SALT_SIZE\npersonal = Bytes.new Sodium::Digest::Blake2B::PERSONAL_SIZE\nout_size = 64 # bytes between Sodium::Digest::Blake2B::OUT_SIZE_MIN and Sodium::Digest::Blake2B::OUT_SIZE_MAX\ndata = \"data\".to_slice\n\n# output_size, key, salt, and personal are optional.\ndigest = Sodium::Digest::Blake2b.new out_size, key: key, salt: salt, personal: personal\ndigest.update data\noutput = d.hexdigest\n\ndigest.reset # Reuse existing object to hash again.\ndigest.update data\noutput = d.hexdigest\n```\n\n### Key derivation\n```crystal\nkdf = Sodium::Kdf.new\n\n# kdf.derive(8_byte_context, subkey_id, subkey_size)\nsubkey1 = kdf.derive \"context1\", 0, 16\nsubkey2 = kdf.derive \"context1\", 1, 16\nsubkey3 = kdf.derive \"context2\", 0, 32\nsubkey4 = kdf.derive \"context2\", 1, 64\n```\n\n### Password Hashing\n```crystal\npwhash = Sodium::Pwhash.new\n\npwhash.memlimit = Sodium::Pwhash::MEMLIMIT_MIN\npwhash.opslimit = Sodium::Pwhash::OPSLIMIT_MIN\n\npass = \"1234\"\nhash = pwhash.hash_str pass\npwhash.verify hash, pass\n```\n\nUse `examples/pwhash_selector.cr` to help choose ops/mem limits.\n\n\nExample output:\nOps limit →\n\n|          |       1 |       4 |      16 |      64 |     256 |    1024 |    4096 |   16384 |   65536 |  262144 | 1048576 |\n| -------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- |\n|       8K |         |         |         |         |         |         |         |         |         |  0.542s |  2.114s |\n|      32K |         |         |         |         |         |         |         |         |  0.513s |  2.069s |\n|     128K |         |         |         |         |         |         |         |  0.530s |  2.121s |\n|     512K |         |         |         |         |         |         |  0.566s |  2.237s |\n|    2048K |         |         |         |         |         |  0.567s |  2.290s |\n|    8192K |         |         |         |         |  0.670s |  2.542s |\n|   32768K |         |         |         |  0.684s |  2.777s |\n|  131072K |         |         |  0.805s |  3.106s |\n|  524288K |  0.504s |  1.135s |  3.661s |\n| 2097152K |  2.119s |\n|   Memory |\n\n## Contributing\n\n1. Fork it ( https://github.com/didactic-drunk/sodium.cr/fork )\n2. **Install a formatting check git hook (ln -sf ../../scripts/git/pre-commit .git/hooks)**\n3. Create your feature branch (git checkout -b my-new-feature)\n4. Commit your changes (git commit -am 'Add some feature')\n5. Push to the branch (git push origin my-new-feature)\n6. Create a new Pull Request\n\n## Project History\n\n* Originally created by [Andrew Hamon](https://github.com/andrewhamons/cox)\n* Forked by [Didactic Drunk](https://github.com/didactic-drunk/cox) for lack of updates in the original project.\n* Complaints about the name being too controversial.  Project name changed from \"cox\" to a more libsodium related name of \"salty seaman\".\n* ~50% complete libsodium API.\n* More complaints about the name.  Dead hooker jokes added.\n* None of the original API is left.\n* More complaints threatening a boycott.  Told them \"Go ahead, I own Coca Cola and Water\".\n* Account unsuspended.\n* Unrelated to the boycott the project name changed to \"libsodium\" because sodium happens to be a tasty byproduct of the two earlier names.\n* Account unsuspended.\n* Dead hooker jokes (mostly) removed.\n\n## Contributors\n\n- [andrewhamon](https://github.com/andrewhamon) Andrew Hamon - creator, former maintainer\n- [dorkrawk](https://github.com/dorkrawk) Dave Schwantes - contributor\n- [didactic-drunk](https://github.com/didactic-drunk) - current maintainer\n","program":{"html_id":"github.com/didactic-drunk/sodium.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/didactic-drunk/sodium.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","path":"Sodium.html","kind":"module","full_name":"Sodium","name":"Sodium","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium.cr","line_number":1,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium.cr"},{"filename":"sodium/error.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/error.cr"},{"filename":"sodium/lib_sodium.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/lib_sodium.cr"},{"filename":"sodium/lib_sodium.cr","line_number":312,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/lib_sodium.cr"},{"filename":"sodium/secure_buffer.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr"},{"filename":"sodium/key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/key.cr"},{"filename":"sodium/nonce.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr"},{"filename":"sodium/crypto_box.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr"},{"filename":"sodium/kdf.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr"},{"filename":"sodium/pwhash.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr"},{"filename":"sodium/secret_box.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr"},{"filename":"sodium/version.cr","line_number":1,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/version.cr"},{"filename":"sodium/sign/public_key.cr","line_number":3,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr"},{"filename":"sodium/sign/secret_key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.0.1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"memcmp(a:Bytes,b:Bytes):Bool-class-method","html_id":"memcmp(a:Bytes,b:Bytes):Bool-class-method","name":"memcmp","doc":"Constant time memory compare.","summary":"<p>Constant time memory compare.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Bytes"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(a : Bytes, b : Bytes) : Bool","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/lib_sodium.cr#L314","def":{"name":"memcmp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Bytes"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if a.bytesize != b.bytesize\n  false\nelse\n  if (LibSodium.sodium_memcmp(a, b, a.bytesize)) == 0\n    true\n  else\n    false\n  end\nend"}},{"id":"memcmp!(a,b)-class-method","html_id":"memcmp!(a,b)-class-method","name":"memcmp!","doc":"Constant time memory compare.  Raises unless comparison succeeds.","summary":"<p>Constant time memory compare.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/lib_sodium.cr#L325","def":{"name":"memcmp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if memcmp(a, b)\nelse\n  raise(Error::MemcmpFailed.new)\nend\ntrue\n"}},{"id":"memzero(bytes:Bytes)-class-method","html_id":"memzero(bytes:Bytes)-class-method","name":"memzero","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/lib_sodium.cr#L330","def":{"name":"memzero","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.sodium_memzero(bytes, bytes.bytesize)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","path":"Sodium/Cipher.html","kind":"module","full_name":"Sodium::Cipher","name":"Cipher","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"},{"filename":"sodium/cipher/cipher.cr","line_number":2,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/cipher.cr"},{"filename":"sodium/cipher/secret_stream.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Use Sodium::Cipher::SecretStream::XChaCha20Poly1305 or SecretBox","summary":"<p>Use Sodium::Cipher::SecretStream::XChaCha20Poly1305 or SecretBox</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/ChaCha20","path":"Sodium/Cipher/ChaCha20.html","kind":"class","full_name":"Sodium::Cipher::ChaCha20","name":"ChaCha20","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_chacha20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_chacha20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/ChaCha20Ietf","path":"Sodium/Cipher/ChaCha20Ietf.html","kind":"class","full_name":"Sodium::Cipher::ChaCha20Ietf","name":"ChaCha20Ietf","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_chacha20_ietf_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_chacha20_ietf_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","path":"Sodium/Cipher/Chalsa.html","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa","abstract":true,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/ChaCha20","kind":"class","full_name":"Sodium::Cipher::ChaCha20","name":"ChaCha20"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/ChaCha20Ietf","kind":"class","full_name":"Sodium::Cipher::ChaCha20Ietf","name":"ChaCha20Ietf"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Salsa20","kind":"class","full_name":"Sodium::Cipher::Salsa20","name":"Salsa20"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/XChaCha20","kind":"class","full_name":"Sodium::Cipher::XChaCha20","name":"XChaCha20"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/XSalsa20","kind":"class","full_name":"Sodium::Cipher::XSalsa20","name":"XSalsa20"}],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"The great beat you can eat!\n\nWhat? They're both dance?","summary":"<p>The great beat you can eat!</p>","class_methods":[],"constructors":[{"id":"new(key,nonce)-class-method","html_id":"new(key,nonce)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""}],"args_string":"(key, nonce)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L18","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key, nonce)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L15","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"edible?-instance-method","html_id":"edible?-instance-method","name":"edible?","doc":"Always returns false. Sadness...","summary":"<p>Always returns false.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L55","def":{"name":"edible?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"final-instance-method","html_id":"final-instance-method","name":"final","doc":"Provided for compatibility with block or tagged ciphers.\nStream ciphers don't have additional data.","summary":"<p>Provided for compatibility with block or tagged ciphers.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L50","def":{"name":"final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Bytes.new(0)"}},{"id":"key=(key:Bytes|SecureBuffer)-instance-method","html_id":"key=(key:Bytes|SecureBuffer)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"args_string":"(key : Bytes | SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L23","def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key.bytesize != key_size\n  raise(ArgumentError.new(\"key must be #{key_size} bytes, got #{key.bytesize}\"))\nend\n@key = key\nkey\n"}},{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L60","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"nonce=(nonce:Bytes)-instance-method","html_id":"nonce=(nonce:Bytes)-instance-method","name":"nonce=","doc":null,"summary":null,"abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Bytes"}],"args_string":"(nonce : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L29","def":{"name":"nonce=","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if nonce.bytesize != nonce_size\n  raise(ArgumentError.new(\"nonce must be #{nonce_size} bytes, got #{nonce.bytesize}\"))\nend\n@nonce = nonce\nnonce\n"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L61","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"offset:Int32-instance-method","html_id":"offset:Int32-instance-method","name":"offset","doc":"Advanced usage.  Don't touch.","summary":"<p>Advanced usage.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L15","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset"}},{"id":"offset=(offset)-instance-method","html_id":"offset=(offset)-instance-method","name":"offset=","doc":"Advanced usage.  Don't touch.","summary":"<p>Advanced usage.</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(offset)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L19","def":{"name":"offset=","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset"}},{"id":"random_key-instance-method","html_id":"random_key-instance-method","name":"random_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L35","def":{"name":"random_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.key = SecureBuffer.random(key_size)"}},{"id":"random_nonce-instance-method","html_id":"random_nonce-instance-method","name":"random_nonce","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L39","def":{"name":"random_nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nonce = Random::Secure.random_bytes(nonce_size)"}},{"id":"update(src:Bytes,dst:Bytes)-instance-method","html_id":"update(src:Bytes,dst:Bytes)-instance-method","name":"update","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L59","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"update(src:Bytes):Bytes-instance-method","html_id":"update(src:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and returns a new Slice","summary":"<p>Xor's src with the cipher output and returns a new Slice</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"args_string":"(src : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L44","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"update(src, Bytes.new(src.bytesize))"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Salsa20","path":"Sodium/Cipher/Salsa20.html","kind":"class","full_name":"Sodium::Cipher::Salsa20","name":"Salsa20","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_salsa20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_salsa20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream","path":"Sodium/Cipher/SecretStream.html","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream","abstract":true,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/secret_stream.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream/XChaCha20Poly1305","kind":"class","full_name":"Sodium::Cipher::SecretStream::XChaCha20Poly1305","name":"XChaCha20Poly1305"}],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L22","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"additional:Bytes?-instance-method","html_id":"additional:Bytes?-instance-method","name":"additional","doc":"Used to authentication but not encrypt additional data.\n\n* Set this before encrypting **and** decrypting.\n* This property is set to nil after calling .update.","summary":"<p>Used to authentication but not encrypt additional data.</p>","abstract":false,"args":[],"args_string":" : Bytes?","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L20","def":{"name":"additional","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"@additional"}},{"id":"additional=(additional:Bytes?)-instance-method","html_id":"additional=(additional:Bytes?)-instance-method","name":"additional=","doc":"Used to authentication but not encrypt additional data.\n\n* Set this before encrypting **and** decrypting.\n* This property is set to nil after calling .update.","summary":"<p>Used to authentication but not encrypt additional data.</p>","abstract":false,"args":[{"name":"additional","doc":null,"default_value":"","external_name":"additional","restriction":"Bytes | ::Nil"}],"args_string":"(additional : Bytes?)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L24","def":{"name":"additional=","args":[{"name":"additional","doc":null,"default_value":"","external_name":"additional","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@additional = additional"}},{"id":"auth_tag_size:Int32-instance-method","html_id":"auth_tag_size:Int32-instance-method","name":"auth_tag_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L75","def":{"name":"auth_tag_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"decrypt-instance-method","html_id":"decrypt-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L30","def":{"name":"decrypt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encrypt_decrypt = -1"}},{"id":"encrypt-instance-method","html_id":"encrypt-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L26","def":{"name":"encrypt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encrypt_decrypt = 1"}},{"id":"final-instance-method","html_id":"final-instance-method","name":"final","doc":"Provided for compatibility with block ciphers.\nStream ciphers don't have additional data.","summary":"<p>Provided for compatibility with block ciphers.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L66","def":{"name":"final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Bytes.new(0)"}},{"id":"header-instance-method","html_id":"header-instance-method","name":"header","doc":"Only used for encryption.","summary":"<p>Only used for encryption.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L46","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @encrypt_decrypt != 1\n  raise(\"only call when encrypting\")\nend\nbuf = Bytes.new(header_size)\ninit_state(buf)\nbuf\n"}},{"id":"header=(buf:Bytes)-instance-method","html_id":"header=(buf:Bytes)-instance-method","name":"header=","doc":"Only used for decryption.","summary":"<p>Only used for decryption.</p>","abstract":false,"args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"args_string":"(buf : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L54","def":{"name":"header=","args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @encrypt_decrypt != -1\n  raise(\"only call when decrypting\")\nend\ninit_state(buf)\nbuf\n"}},{"id":"header_size:Int32-instance-method","html_id":"header_size:Int32-instance-method","name":"header_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L74","def":{"name":"header_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"init_state(header_buf:Bytes):Nil-instance-method","html_id":"init_state(header_buf:Bytes):Nil-instance-method","name":"init_state","doc":null,"summary":null,"abstract":true,"args":[{"name":"header_buf","doc":null,"default_value":"","external_name":"header_buf","restriction":"Bytes"}],"args_string":"(header_buf : Bytes) : Nil","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L71","def":{"name":"init_state","args":[{"name":"header_buf","doc":null,"default_value":"","external_name":"header_buf","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"key=(key:Bytes|SecureBuffer)-instance-method","html_id":"key=(key:Bytes|SecureBuffer)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"args_string":"(key : Bytes | SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L34","def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes | SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key.bytesize != key_size\n  raise(ArgumentError.new(\"key must be #{key_size} bytes, got #{key.bytesize}\"))\nend\n@key = key\nkey\n"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L73","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"random_key-instance-method","html_id":"random_key-instance-method","name":"random_key","doc":"Returns a random key in a SecureBuffer.","summary":"<p>Returns a random key in a SecureBuffer.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L41","def":{"name":"random_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.key = SecureBuffer.random(key_size)"}},{"id":"tag:UInt8-instance-method","html_id":"tag:UInt8-instance-method","name":"tag","doc":"* Set tag before encrypting\n* Tag is set after decrypting","summary":"<ul><li>Set tag before encrypting * Tag is set after decrypting</li></ul>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L14","def":{"name":"tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag"}},{"id":"tag=(tag)-instance-method","html_id":"tag=(tag)-instance-method","name":"tag=","doc":"* Set tag before encrypting\n* Tag is set after decrypting","summary":"<ul><li>Set tag before encrypting * Tag is set after decrypting</li></ul>","abstract":false,"args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"args_string":"(tag)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L18","def":{"name":"tag=","args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag = tag"}},{"id":"update(src:Bytes,dst:Bytes)-instance-method","html_id":"update(src:Bytes,dst:Bytes)-instance-method","name":"update","doc":null,"summary":null,"abstract":true,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L70","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"update(src:Bytes):Bytes-instance-method","html_id":"update(src:Bytes):Bytes-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"args_string":"(src : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L60","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"update(src, Bytes.new(src.bytesize + (auth_tag_size * @encrypt_decrypt)))"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream/XChaCha20Poly1305","path":"Sodium/Cipher/SecretStream/XChaCha20Poly1305.html","kind":"class","full_name":"Sodium::Cipher::SecretStream::XChaCha20Poly1305","name":"XChaCha20Poly1305","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/secret_stream.cr","line_number":78,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/SecretStream","kind":"class","full_name":"Sodium::Cipher::SecretStream","name":"SecretStream"},"doc":"[Libsodium Secret Stream API](https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream)\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n* every .update is it's own authenticated message.  Unlike OpenSSL this class doesn't buffer data.  You must handle the framing yourself.\n* .header must be called for encryption before calling .update\n* .header= must be called for decryption with the data returned from .header before calling .update\n* A tag may be set before encrypting and is set after calling .update when decrypting.\n* .additional may be set before encrypting and must be set before decrypting.\n\nSee `spec/sodium/cipher/secret_stream_spec.cr` for examples on how to use this class.\n\nWARNING: Not verified against test vectors.","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream\" target=\"_blank\">Libsodium Secret Stream API</a></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"auth_tag_size:Int32-instance-method","html_id":"auth_tag_size:Int32-instance-method","name":"auth_tag_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"auth_tag_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_abytes.to_i"}},{"id":"header_size:Int32-instance-method","html_id":"header_size:Int32-instance-method","name":"header_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"header_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_headerbytes.to_i"}},{"id":"key_size:Int32-instance-method","html_id":"key_size:Int32-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_keybytes.to_i"}},{"id":"tag_final-instance-method","html_id":"tag_final-instance-method","name":"tag_final","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"tag_final","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_final"}},{"id":"tag_push-instance-method","html_id":"tag_push-instance-method","name":"tag_push","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"tag_push","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_push"}},{"id":"tag_rekey-instance-method","html_id":"tag_rekey-instance-method","name":"tag_rekey","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"tag_rekey","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_secretstream_xchacha20poly1305_tag_rekey"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/secret_stream.cr#L78","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if @initialized\nelse\n  raise(Sodium::Error.new(\"must call .header or .header= first\"))\nend\nmin_dst_size = src.bytesize + (auth_tag_size * @encrypt_decrypt)\nif dst.bytesize < min_dst_size\n  raise(ArgumentError.new(\"dst bytesize must at least #{min_dst_size}, got #{dst.bytesize}\"))\nend\nad, ad_size = if a = @additional\n  {a.to_unsafe, a.bytesize}\nelse\n  {Pointer(UInt8).null, 0}\nend\ncase @encrypt_decrypt\nwhen 1\n  if (LibSodium.crypto_secretstream_xchacha20poly1305_push(@state.to_slice, dst.to_slice, out dst_size, src, src.bytesize, ad, ad_size, @tag)) != 0\n    raise(Sodium::Error.new(\"crypto_streamsecret_xchacha20poly1305_xor_ic\"))\n  end\n  @tag = 0\n  @additional = nil\n  dst[0, dst_size]\nwhen -1\n  if (LibSodium.crypto_secretstream_xchacha20poly1305_pull(@state.to_slice, dst.to_slice, out dst_size2, out @tag, src, src.bytesize, ad, ad_size)) != 0\n    raise(Sodium::Error.new(\"crypto_streamsecret_xchacha20poly1305_xor_ic\"))\n  end\n  @additional = nil\n  dst[0, dst_size2]\nelse\n  abort(\"invalid encrypt_decrypt state #{@encrypt_decrypt}\")\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/XChaCha20","path":"Sodium/Cipher/XChaCha20.html","kind":"class","full_name":"Sodium::Cipher::XChaCha20","name":"XChaCha20","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_xchacha20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_xchacha20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/XSalsa20","path":"Sodium/Cipher/XSalsa20.html","kind":"class","full_name":"Sodium::Cipher::XSalsa20","name":"XSalsa20","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher/Chalsa","kind":"class","full_name":"Sodium::Cipher::Chalsa","name":"Chalsa"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/cipher/chalsa.cr","line_number":64,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Cipher","kind":"module","full_name":"Sodium::Cipher","name":"Cipher"},"doc":"These classes can be used to generate pseudo-random data from a key,\nor as building blocks for implementing custom constructions, but they\nare not alternatives to secretbox.\n\nSee [https://libsodium.gitbook.io/doc/advanced/stream_ciphers](https://libsodium.gitbook.io/doc/advanced/stream_ciphers) for further information.\n\nThis class mimicks the OpenSSL::Cipher interface with minor differences.\n\nSee `spec/sodium/cipher/chalsa_spec.cr` for examples on how to use this class.\n\nWARNING: Not validated against test vectors.  You should probably write some before using this class.","summary":"<p>These classes can be used to generate pseudo-random data from a key, or as building blocks for implementing custom constructions, but they are not alternatives to secretbox.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"key_size-instance-method","html_id":"key_size-instance-method","name":"key_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"key_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_keybytes.to_i32"}},{"id":"nonce_size-instance-method","html_id":"nonce_size-instance-method","name":"nonce_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"nonce_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_stream_chacha20_ietf_noncebytes.to_i32"}},{"id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","html_id":"update(src:Bytes,dst:Bytes):Bytes-instance-method","name":"update","doc":"Xor's src with the cipher output and places in dst.\n\nsrc and dst may be the same object but should not overlap.","summary":"<p>Xor's src with the cipher output and places in dst.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/cipher/chalsa.cr#L64","def":{"name":"update","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (k = @key) && (n = @nonce)\n  if src.bytesize != dst.bytesize\n    raise(ArgumentError.new(\"src and dst bytesize must be identical\"))\n  end\n  if (LibSodium.crypto_stream_xsalsa20_xor_ic(dst, src, src.bytesize, n, @offset, k.to_slice)) != 0\n    raise(Sodium::Error.new(\"crypto_stream_xsalsa20_xor_ic\"))\n  end\n  @offset = @offset + src.bytesize\n  dst\nelse\n  raise(Sodium::Error.new(\"key and nonce must be set before calling update #{@key.nil?} #{@nonce.nil?}\"))\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox","path":"Sodium/CryptoBox.html","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/crypto_box/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr"},{"filename":"sodium/crypto_box/secret_key.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr"},{"filename":"sodium/crypto_box.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MAC_SIZE","name":"MAC_SIZE","value":"LibSodium.crypto_box_macbytes.to_i","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Use Sodium::CryptoBox::SecretKey#box","summary":"<p>Use Sodium::CryptoBox::SecretKey#box</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"decrypt(src:Bytes,dst=Bytes.new(src.bytesize-MAC_SIZE),nonce=Nonce.random):Bytes-instance-method","html_id":"decrypt(src:Bytes,dst=Bytes.new(src.bytesize-MAC_SIZE),nonce=Nonce.random):Bytes-instance-method","name":"decrypt","doc":"Returns decrypted message.\n\nOptionally supply a destination buffer.","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"args_string":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">-</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr#L55","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (LibSodium.crypto_box_open_easy_afternm(dst, src, src.bytesize, nonce.to_slice, @key)) != 0\n  raise(Error::DecryptionFailed.new(\"crypto_box_open_easy\"))\nend\ndst\n"}},{"id":"decrypt(src)-instance-method","html_id":"decrypt(src)-instance-method","name":"decrypt","doc":"Returns decrypted message.\n","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr#L48","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"decrypt(src.to_slice)"}},{"id":"encrypt(src:Bytes,dst=Bytes.new(src.bytesize+MAC_SIZE),nonce=Nonce.random):::Tuple(Bytes,Nonce)-instance-method","html_id":"encrypt(src:Bytes,dst=Bytes.new(src.bytesize+MAC_SIZE),nonce=Nonce.random):::Tuple(Bytes,Nonce)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}\n\nOptionally supply a destination buffer.","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"args_string":"(src : Bytes, dst = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">+</span> <span class=\"t\">MAC_SIZE</span>), nonce = <span class=\"t\">Nonce</span>.random) : ::Tuple(Bytes, Nonce)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr#L38","def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":""},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Nonce)","visibility":"Public","body":"nonce.used!\nif (LibSodium.crypto_box_easy_afternm(dst, src, src.bytesize, nonce.to_slice, @key.to_slice)) != 0\n  raise(Error.new(\"crypto_box_easy\"))\nend\n{dst, nonce}\n"}},{"id":"encrypt(src)-instance-method","html_id":"encrypt(src)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box.cr#L31","def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice)"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/PublicKey","path":"Sodium/CryptoBox/PublicKey.html","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/crypto_box/public_key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_box_publickeybytes.to_i","doc":null,"summary":null},{"id":"SEAL_SIZE","name":"SEAL_SIZE","value":"LibSodium.crypto_box_sealbytes","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L18","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"encrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize+SEAL_SIZE)):Bytes-instance-method","html_id":"encrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize+SEAL_SIZE)):Bytes-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + SEAL_SIZE)","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">+</span> <span class=\"t\">SEAL_SIZE</span>)) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L30","def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + SEAL_SIZE)","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (LibSodium.crypto_box_seal(dst, src, src.bytesize, @bytes)) != 0\n  raise(Sodium::Error.new(\"crypto_box_seal\"))\nend\ndst\n"}},{"id":"encrypt(src)-instance-method","html_id":"encrypt(src)-instance-method","name":"encrypt","doc":"Anonymously send messages to a recipient given its public key.\nFor authenticated message use `secret_key.box(recipient_public_key).encrypt`.","summary":"<p>Anonymously send messages to a recipient given its public key.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L26","def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice)"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L10","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L10","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/PublicKey/SerializeConverter","path":"Sodium/CryptoBox/PublicKey/SerializeConverter.html","kind":"module","full_name":"Sodium::CryptoBox::PublicKey::SerializeConverter","name":"SerializeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/crypto_box/public_key.cr","line_number":37,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/PublicKey","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey"},"doc":null,"summary":null,"class_methods":[{"id":"from_json(value:JSON::PullParser):PublicKey-class-method","html_id":"from_json(value:JSON::PullParser):PublicKey-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"args_string":"(value : JSON::PullParser) : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L42","def":{"name":"from_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"PublicKey.new(Base64.decode(value.read_string))"}},{"id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L50","def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.class}\")\nend\nPublicKey.new(Base64.decode(node.value))\n"}},{"id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","html_id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : PublicKey, json : JSON::Builder)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L38","def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value.to_slice))"}},{"id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","html_id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : PublicKey, yaml : YAML::Nodes::Builder)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/public_key.cr#L46","def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(Base64.strict_encode(value.to_slice))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/SecretKey","path":"Sodium/CryptoBox/SecretKey.html","kind":"class","full_name":"Sodium::CryptoBox::SecretKey","name":"SecretKey","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/crypto_box/secret_key.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_box_secretkeybytes.to_i","doc":null,"summary":null},{"id":"SEAL_SIZE","name":"SEAL_SIZE","value":"LibSodium.crypto_box_sealbytes.to_i","doc":null,"summary":null},{"id":"SEED_SIZE","name":"SEED_SIZE","value":"LibSodium.crypto_box_seedbytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox"},"doc":"Key used for encryption + authentication or encryption without authentication, not for unencrypted signing.","summary":"<p>Key used for encryption + authentication or encryption without authentication, not for unencrypted signing.</p>","class_methods":[],"constructors":[{"id":"new(bytes:Bytes,pkey:Bytes?=nil)-class-method","html_id":"new(bytes:Bytes,pkey:Bytes?=nil)-class-method","name":"new","doc":"Use existing secret and public keys.\nCopies secret key to a SecureBuffer.\nRecomputes the public key from a secret key if missing.","summary":"<p>Use existing secret and public keys.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"args_string":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L32","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, pkey)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random secret/public key pair.","summary":"<p>Generate a new random secret/public key pair.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L21","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:Bytes,erase=false)-class-method","html_id":"new(*,seed:Bytes,erase=false)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.\nCopies seed to a SecureBuffer.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L47","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:SecureBuffer)-class-method","html_id":"new(*,seed:SecureBuffer)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"args_string":"(*, seed : SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L59","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"box(public_key):CryptoBox-instance-method","html_id":"box(public_key):CryptoBox-instance-method","name":"box","doc":"Return a Box containing a precomputed shared secret for use with authenticated encryption/decryption.","summary":"<p>Return a Box containing a precomputed shared secret for use with authenticated encryption/decryption.</p>","abstract":false,"args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"args_string":"(public_key) : CryptoBox","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L76","def":{"name":"box","args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox","visibility":"Public","body":"CryptoBox.new(self, public_key)"}},{"id":"box(public_key,&block)-instance-method","html_id":"box(public_key,&amp;block)-instance-method","name":"box","doc":"Create a new box and automatically close when the block exits.","summary":"<p>Create a new box and automatically close when the block exits.</p>","abstract":false,"args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"args_string":"(public_key, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L81","def":{"name":"box","args":[{"name":"public_key","doc":null,"default_value":"","external_name":"public_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"b = box(public_key)\nbegin\n  yield b\nensure\n  b.close\nend\n"}},{"id":"decrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize-SEAL_SIZE)):Bytes-instance-method","html_id":"decrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize-SEAL_SIZE)):Bytes-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - SEAL_SIZE)","external_name":"dst","restriction":"Bytes"}],"args_string":"(src : Bytes, dst : Bytes = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">-</span> <span class=\"t\">SEAL_SIZE</span>)) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L96","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize - SEAL_SIZE)","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if (LibSodium.crypto_box_seal_open(dst, src, src.bytesize, @public_key.to_slice, self.to_slice)) != 0\n  raise(Sodium::Error.new(\"crypto_box_seal_open\"))\nend\ndst\n"}},{"id":"decrypt(src)-instance-method","html_id":"decrypt(src)-instance-method","name":"decrypt","doc":"Anonymously receive messages without a signatures.\nFor authenticated messages use `secret_key.box(recipient_public_key).decrypt`.","summary":"<p>Anonymously receive messages without a signatures.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L92","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(src.to_slice)"}},{"id":"public_key:PublicKey-instance-method","html_id":"public_key:PublicKey-instance-method","name":"public_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L15","def":{"name":"public_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"@public_key"}},{"id":"seed-instance-method","html_id":"seed-instance-method","name":"seed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L70","def":{"name":"seed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@seed.not_nil!.to_slice"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L16","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/crypto_box/secret_key.cr#L16","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Digest","path":"Sodium/Digest.html","kind":"module","full_name":"Sodium::Digest","name":"Digest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/digest/blake2b.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Digest/Blake2b","path":"Sodium/Digest/Blake2b.html","kind":"class","full_name":"Sodium::Digest::Blake2b","name":"Blake2b","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/OpenSSL/DigestBase","kind":"module","full_name":"OpenSSL::DigestBase","name":"DigestBase"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/digest/blake2b.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_generichash_blake2b_keybytes.to_i","doc":"32","summary":"<p>32</p>"},{"id":"KEY_SIZE_MAX","name":"KEY_SIZE_MAX","value":"LibSodium.crypto_generichash_blake2b_keybytes_max.to_i","doc":"64","summary":"<p>64</p>"},{"id":"KEY_SIZE_MIN","name":"KEY_SIZE_MIN","value":"LibSodium.crypto_generichash_blake2b_keybytes_min.to_i","doc":"16","summary":"<p>16</p>"},{"id":"OUT_SIZE","name":"OUT_SIZE","value":"LibSodium.crypto_generichash_blake2b_bytes.to_i32","doc":"32","summary":"<p>32</p>"},{"id":"OUT_SIZE_MAX","name":"OUT_SIZE_MAX","value":"LibSodium.crypto_generichash_blake2b_bytes_max.to_i32","doc":"64","summary":"<p>64</p>"},{"id":"OUT_SIZE_MIN","name":"OUT_SIZE_MIN","value":"LibSodium.crypto_generichash_blake2b_bytes_min.to_i32","doc":"16","summary":"<p>16</p>"},{"id":"PERSONAL_SIZE","name":"PERSONAL_SIZE","value":"LibSodium.crypto_generichash_blake2b_personalbytes.to_i","doc":"16","summary":"<p>16</p>"},{"id":"SALT_SIZE","name":"SALT_SIZE","value":"LibSodium.crypto_generichash_blake2b_saltbytes.to_i","doc":"16","summary":"<p>16</p>"}],"included_modules":[{"html_id":"github.com/didactic-drunk/sodium.cr/OpenSSL/DigestBase","kind":"module","full_name":"OpenSSL::DigestBase","name":"DigestBase"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Digest","kind":"module","full_name":"Sodium::Digest","name":"Digest"},"doc":"Hash data using Blake2b.\n\nCompatible with the Crystal OpenSSL::Digest interface.\n\nUsage:\n```\ndigest = Blake2b.new\ndigest.update data\ndigest.update data\ndigest.hexdigest => String\n```","summary":"<p>Hash data using Blake2b.</p>","class_methods":[],"constructors":[{"id":"new(digest_size:Int32=OUT_SIZE,key:Bytes?|SecureBuffer?=nil,salt:Bytes?=nil,personal:Bytes?=nil)-class-method","html_id":"new(digest_size:Int32=OUT_SIZE,key:Bytes?|SecureBuffer?=nil,salt:Bytes?=nil,personal:Bytes?=nil)-class-method","name":"new","doc":"Create a new Blake2b Digest.\n\ndigest_size is selectable.  Use 32 for Blake2b256 (libsodium default), 64 for Blake2b512\nor any value between OUT_SIZE_MIN and OUT_SIZE_MAX.  Many libsodium bindings only support [256] or [256 and 512] bit output.\n\n`key`, `salt`, and `personal` are all optional.  Most other libsodium bindings don't support them.\nCheck the other implementation(s) you need to interoperate with before using.","summary":"<p>Create a new Blake2b Digest.</p>","abstract":false,"args":[{"name":"digest_size","doc":null,"default_value":"OUT_SIZE","external_name":"digest_size","restriction":"Int32"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"Bytes | ::Nil | SecureBuffer | ::Nil"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | ::Nil"},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":"Bytes | ::Nil"}],"args_string":"(digest_size : Int32 = <span class=\"t\">OUT_SIZE</span>, key : Bytes? | SecureBuffer? = <span class=\"n\">nil</span>, salt : Bytes? = <span class=\"n\">nil</span>, personal : Bytes? = <span class=\"n\">nil</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L62","def":{"name":"new","args":[{"name":"digest_size","doc":null,"default_value":"OUT_SIZE","external_name":"digest_size","restriction":"Int32"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"Bytes | ::Nil | SecureBuffer | ::Nil"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"Bytes | ::Nil"},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":"Bytes | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(digest_size, key, salt, personal)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L120","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dup"}},{"id":"digest_size:Int32-instance-method","html_id":"digest_size:Int32-instance-method","name":"digest_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L43","def":{"name":"digest_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@digest_size"}},{"id":"finish(dst:Bytes):Bytes-instance-method","html_id":"finish(dst:Bytes):Bytes-instance-method","name":"finish","doc":"Destructive operation.  Assumes you know what you are doing.\nUse .digest or .hexdigest instead.","summary":"<p>Destructive operation.</p>","abstract":false,"args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"args_string":"(dst : Bytes) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L111","def":{"name":"finish","args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"ret = LibSodium.crypto_generichash_blake2b_final(@state.to_slice, dst, dst.bytesize)\nif ret != 0\n  raise(Sodium::Error.new(\"crypto_generichash_blake2b_final #{ret.inspect}\"))\nend\ndst\n"}},{"id":"finish-instance-method","html_id":"finish-instance-method","name":"finish","doc":"Destructive operation.  Assumes you know what you are doing.\nUse .digest or .hexdigest instead.","summary":"<p>Destructive operation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L103","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dst = Bytes.new(@digest_size)\nfinish(dst)\ndst\n"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L83","def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = @key.to_unsafe\nsalt = @salt.to_unsafe\npersonal = @personal.to_unsafe\nif (LibSodium.crypto_generichash_blake2b_init_salt_personal(@state.to_slice, key, @key_size, @digest_size, salt, personal)) != 0\n  raise(Sodium::Error.new(\"blake2b_init_key_salt_personal\"))\nend\n"}},{"id":"update(data:Bytes)-instance-method","html_id":"update(data:Bytes)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/digest/blake2b.cr#L93","def":{"name":"update","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (LibSodium.crypto_generichash_blake2b_update(@state.to_slice, data, data.bytesize)) != 0\n  raise(Sodium::Error.new(\"crypto_generichash_blake2b_update\"))\nend\nself\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","path":"Sodium/Error.html","kind":"class","full_name":"Sodium::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/error.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/error.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/DecryptionFailed","kind":"class","full_name":"Sodium::Error::DecryptionFailed","name":"DecryptionFailed"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/MemcmpFailed","kind":"class","full_name":"Sodium::Error::MemcmpFailed","name":"MemcmpFailed"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/VerificationFailed","kind":"class","full_name":"Sodium::Error::VerificationFailed","name":"VerificationFailed"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash/PasswordVerifyError","kind":"class","full_name":"Sodium::Pwhash::PasswordVerifyError","name":"PasswordVerifyError"}],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/DecryptionFailed","path":"Sodium/Error/DecryptionFailed.html","kind":"class","full_name":"Sodium::Error::DecryptionFailed","name":"DecryptionFailed","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/error.cr","line_number":8,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/error.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/MemcmpFailed","path":"Sodium/Error/MemcmpFailed.html","kind":"class","full_name":"Sodium::Error::MemcmpFailed","name":"MemcmpFailed","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/error.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/error.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error/VerificationFailed","path":"Sodium/Error/VerificationFailed.html","kind":"class","full_name":"Sodium::Error::VerificationFailed","name":"VerificationFailed","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/error.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/error.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Kdf","path":"Sodium/Kdf.html","kind":"class","full_name":"Sodium::Kdf","name":"Kdf","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/kdf.cr","line_number":15,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONTEXT_SIZE","name":"CONTEXT_SIZE","value":"LibSodium.crypto_kdf_contextbytes","doc":null,"summary":null},{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_kdf_keybytes.to_i","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Key derivation function\n\nUsage:\n```\nkdf = KDF.new\nsubkey_id = 0\noutput_size = 16\nsubkey = kdf.derive \"8bytectx\", subkey_id, output_size\n```","summary":"<p>Key derivation function</p>","class_methods":[],"constructors":[{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Use an existing KDF key.\n\n* Copies key to a new SecureBuffer\n* Optionally erases bytes after copying if erase is set","summary":"<p>Use an existing KDF key.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L28","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(sbuf:SecureBuffer)-class-method","html_id":"new(sbuf:SecureBuffer)-class-method","name":"new","doc":"Use an existing KDF SecureBuffer key.","summary":"<p>Use an existing KDF SecureBuffer key.</p>","abstract":false,"args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"}],"args_string":"(sbuf : SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L37","def":{"name":"new","args":[{"name":"sbuf","doc":null,"default_value":"","external_name":"sbuf","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sbuf)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random KDF key.\n\nMake sure to save kdf.to_slice before kdf goes out of scope.","summary":"<p>Generate a new random KDF key.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L47","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"derive(context,subkey_id,subkey_size):SecureBuffer-instance-method","html_id":"derive(context,subkey_id,subkey_size):SecureBuffer-instance-method","name":"derive","doc":"Derive a consistent subkey based on `context` and `subkey_id`.\n\ncontext and subkey don't need to be secret\n* context must be 8 bytes\n* subkey_size must be 16..64 bytes as of libsodium 1.0.17\n\nReturns a SecureBuffer.  May transfer ownership to SecretBox or SecretKey without copying.","summary":"<p>Derive a consistent subkey based on <code>context</code> and <code>subkey_id</code>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""},{"name":"subkey_size","doc":null,"default_value":"","external_name":"subkey_size","restriction":""}],"args_string":"(context, subkey_id, subkey_size) : SecureBuffer","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L58","def":{"name":"derive","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""},{"name":"subkey_size","doc":null,"default_value":"","external_name":"subkey_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"context = context.to_slice\nif context.bytesize != CONTEXT_SIZE\n  raise(ArgumentError.new(\"context must be #{CONTEXT_SIZE}, got #{context.bytesize}\"))\nend\nsubkey = SecureBuffer.new(subkey_size)\nif (ret = LibSodium.crypto_kdf_derive_from_key(subkey, subkey.bytesize, subkey_id, context, self.to_slice)) != 0\n  raise(Sodium::Error.new(\"crypto_kdf_derive_from_key returned #{ret} (subkey size is probably out of range)\"))\nend\nsubkey\n"}},{"id":"derive_cryptobox(context,subkey_id):CryptoBox::SecretKey-instance-method","html_id":"derive_cryptobox(context,subkey_id):CryptoBox::SecretKey-instance-method","name":"derive_cryptobox","doc":"Convenience method to create a new CryptoBox::Secret without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new CryptoBox::Secret without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : CryptoBox::SecretKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L74","def":{"name":"derive_cryptobox","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CryptoBox::SecretKey","visibility":"Public","body":"subkey = derive(context, subkey_id, CryptoBox::SecretKey::SEED_SIZE)\nCryptoBox::SecretKey.new(seed: subkey)\n"}},{"id":"derive_secretbox(context,subkey_id):SecretBox-instance-method","html_id":"derive_secretbox(context,subkey_id):SecretBox-instance-method","name":"derive_secretbox","doc":"Convenience method to create a new SecretBox without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new SecretBox without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : SecretBox","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L90","def":{"name":"derive_secretbox","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecretBox","visibility":"Public","body":"subkey = derive(context, subkey_id, SecretBox::KEY_SIZE)\nSecretBox.new(subkey)\n"}},{"id":"derive_sign(context,subkey_id):Sign::SecretKey-instance-method","html_id":"derive_sign(context,subkey_id):Sign::SecretKey-instance-method","name":"derive_sign","doc":"Convenience method to create a new Sign::Secret without handling the key.\n\nSee derive() for further information on context and subkey_id.","summary":"<p>Convenience method to create a new Sign::Secret without handling the key.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"args_string":"(context, subkey_id) : Sign::SecretKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L82","def":{"name":"derive_sign","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"subkey_id","doc":null,"default_value":"","external_name":"subkey_id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Sign::SecretKey","visibility":"Public","body":"subkey = derive(context, subkey_id, Sign::SecretKey::SEED_SIZE)\nSign::SecretKey.new(seed: subkey)\n"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L22","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/kdf.cr#L22","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","path":"Sodium/Key.html","kind":"class","full_name":"Sodium::Key","name":"Key","abstract":true,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/key.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/PublicKey","kind":"class","full_name":"Sodium::CryptoBox::PublicKey","name":"PublicKey"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox/SecretKey","kind":"class","full_name":"Sodium::CryptoBox::SecretKey","name":"SecretKey"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/SecretBox","kind":"class","full_name":"Sodium::SecretBox","name":"SecretBox"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/PublicKey","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/SecretKey","kind":"class","full_name":"Sodium::Sign::SecretKey","name":"SecretKey"}],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_slice:Bytes-instance-method","html_id":"to_slice:Bytes-instance-method","name":"to_slice","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/key.cr#L8","def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce","path":"Sodium/Nonce.html","kind":"class","full_name":"Sodium::Nonce","name":"Nonce","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/nonce.cr","line_number":5,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium::NONCE_SIZE.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[{"id":"random-class-method","html_id":"random-class-method","name":"random","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L27","def":{"name":"random","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(Random::Secure.random_bytes(NONCE_SIZE))"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L31","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(Bytes.new(NONCE_SIZE))"}}],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L21","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"increment-instance-method","html_id":"increment-instance-method","name":"increment","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L35","def":{"name":"increment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.sodium_increment(@bytes, @bytes.bytesize)\n@used = false\n"}},{"id":"reusable=(reusable)-instance-method","html_id":"reusable=(reusable)-instance-method","name":"reusable=","doc":"Only use with single use keys.","summary":"<p>Only use with single use keys.</p>","abstract":false,"args":[{"name":"reusable","doc":null,"default_value":"","external_name":"reusable","restriction":""}],"args_string":"(reusable)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L22","def":{"name":"reusable=","args":[{"name":"reusable","doc":null,"default_value":"","external_name":"reusable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reusable = reusable"}},{"id":"reusable?:Bool-instance-method","html_id":"reusable?:Bool-instance-method","name":"reusable?","doc":"Only use with single use keys.","summary":"<p>Only use with single use keys.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L18","def":{"name":"reusable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reusable"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns bytes","summary":"<p>Returns bytes</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L19","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns bytes","summary":"<p>Returns bytes</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L19","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"used!-instance-method","html_id":"used!-instance-method","name":"used!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L40","def":{"name":"used!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @used\n  raise(Error::Reused.new(\"attempted nonce reuse\"))\nend\nif @reusable\nelse\n  @used = true\nend\n"}},{"id":"used?:Bool-instance-method","html_id":"used?:Bool-instance-method","name":"used?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr#L15","def":{"name":"used?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@used"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error","path":"Sodium/Nonce/Error.html","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/nonce.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error/Reused","kind":"class","full_name":"Sodium::Nonce::Error::Reused","name":"Reused"}],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce","kind":"class","full_name":"Sodium::Nonce","name":"Nonce"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error/Reused","path":"Sodium/Nonce/Error/Reused.html","kind":"class","full_name":"Sodium::Nonce::Error::Reused","name":"Reused","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/nonce.cr","line_number":7,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/nonce.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Nonce/Error","kind":"class","full_name":"Sodium::Nonce::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash","path":"Sodium/Pwhash.html","kind":"class","full_name":"Sodium::Pwhash","name":"Pwhash","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/pwhash.cr","line_number":10,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MEMLIMIT_INTERACTIVE","name":"MEMLIMIT_INTERACTIVE","value":"LibSodium.crypto_pwhash_memlimit_interactive","doc":null,"summary":null},{"id":"MEMLIMIT_MAX","name":"MEMLIMIT_MAX","value":"LibSodium.crypto_pwhash_memlimit_max","doc":"Don't use this.  Maximum of the library which is more ram than any computer.","summary":"<p>Don't use this.</p>"},{"id":"MEMLIMIT_MIN","name":"MEMLIMIT_MIN","value":"LibSodium.crypto_pwhash_memlimit_min","doc":null,"summary":null},{"id":"OPSLIMIT_INTERACTIVE","name":"OPSLIMIT_INTERACTIVE","value":"LibSodium.crypto_pwhash_opslimit_interactive","doc":null,"summary":null},{"id":"OPSLIMIT_MAX","name":"OPSLIMIT_MAX","value":"LibSodium.crypto_pwhash_opslimit_max","doc":null,"summary":null},{"id":"OPSLIMIT_MIN","name":"OPSLIMIT_MIN","value":"LibSodium.crypto_pwhash_opslimit_min","doc":null,"summary":null},{"id":"OPSLIMIT_MODERATE","name":"OPSLIMIT_MODERATE","value":"LibSodium.crypto_pwhash_opslimit_moderate","doc":null,"summary":null},{"id":"OPSLIMIT_SENSITIVE","name":"OPSLIMIT_SENSITIVE","value":"LibSodium.crypto_pwhash_opslimit_sensitive","doc":null,"summary":null},{"id":"SALT_SIZE","name":"SALT_SIZE","value":"LibSodium.crypto_pwhash_saltbytes","doc":null,"summary":null},{"id":"STR_SIZE","name":"STR_SIZE","value":"LibSodium.crypto_pwhash_strbytes","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"[Argon2 Password Hashing](https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function)\n* #store #verify #needs_rehash? are used together for password verification.\n* #derive_key is used on it's own to generate password based keys.\n\n**See `examples/pwhash_selector.cr` for help on selecting parameters.**","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/password_hashing/the_argon2i_function\" target=\"_blank\">Argon2 Password Hashing</a> * #store #verify #needs_rehash? are used together for password verification.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"create(pass)-instance-method","html_id":"create(pass)-instance-method","name":"create","doc":"Apply the most recent password hashing algorithm agains a password.\nReturns a opaque String which includes:\n* the result of a memory-hard, CPU-intensive hash function applied to the password\n* the automatically generated salt used for the previous computation\n* the other parameters required to verify the password, including the algorithm identifier, its version, opslimit and memlimit.","summary":"<p>Apply the most recent password hashing algorithm agains a password.</p>","abstract":false,"args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"args_string":"(pass)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L51","def":{"name":"create","args":[{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"outstr = Bytes.new(STR_SIZE)\nif (LibSodium.crypto_pwhash_str(outstr, pass, pass.bytesize, @opslimit, @memlimit)) != 0\n  raise(Sodium::Error.new(\"crypto_pwhash_str\"))\nend\noutstr\n"}},{"id":"derive_kdf(salt,pass,key_bytes):Kdf-instance-method","html_id":"derive_kdf(salt,pass,key_bytes):Kdf-instance-method","name":"derive_kdf","doc":"Derives a key using derive_key and returns KDF.new(key)","summary":"<p>Derives a key using derive_key and returns KDF.new(key)</p>","abstract":false,"args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"args_string":"(salt, pass, key_bytes) : Kdf","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L106","def":{"name":"derive_kdf","args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Kdf","visibility":"Public","body":"key = derive_key(salt, pass, key_bytes)\nKdf.new(key)\n"}},{"id":"derive_key(salt:Bytes,pass:Bytes,key_bytes):SecureBuffer-instance-method","html_id":"derive_key(salt:Bytes,pass:Bytes,key_bytes):SecureBuffer-instance-method","name":"derive_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes"},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes"},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"args_string":"(salt : Bytes, pass : Bytes, key_bytes) : SecureBuffer","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L91","def":{"name":"derive_key","args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":"Bytes"},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":"Bytes"},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SecureBuffer","visibility":"Public","body":"if salt.bytesize != SALT_SIZE\n  raise(\"salt expected #{SALT_SIZE} bytes, got #{salt.bytesize} \")\nend\nif m = mode\n  key = SecureBuffer.new(key_bytes)\n  if (LibSodium.crypto_pwhash(key.to_slice, key.bytesize, pass, pass.bytesize, salt, @opslimit, @memlimit, m)) != 0\n    raise(Sodium::Error.new(\"crypto_pwhash_str\"))\n  end\n  key\nelse\n  raise(ArgumentError.new(\"mode not set\"))\nend\n"}},{"id":"derive_key(salt,pass,key_bytes)-instance-method","html_id":"derive_key(salt,pass,key_bytes)-instance-method","name":"derive_key","doc":"Returns a consistent key based on [salt, pass, key_bytes, mode, ops_limit, mem_limit] in a SecureBuffer\n\nMust set a mode before calling.","summary":"<p>Returns a consistent key based on [salt, pass, key_bytes, mode, ops_limit, mem_limit] in a SecureBuffer</p>","abstract":false,"args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"args_string":"(salt, pass, key_bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L87","def":{"name":"derive_key","args":[{"name":"salt","doc":null,"default_value":"","external_name":"salt","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""},{"name":"key_bytes","doc":null,"default_value":"","external_name":"key_bytes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"derive_key(salt.to_slice, pass.to_slice, key_bytes)"}},{"id":"memlimit:UInt64-instance-method","html_id":"memlimit:UInt64-instance-method","name":"memlimit","doc":"Specified in bytes.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L43","def":{"name":"memlimit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@memlimit"}},{"id":"memlimit=(memlimit)-instance-method","html_id":"memlimit=(memlimit)-instance-method","name":"memlimit=","doc":"Specified in bytes.","summary":"<p>Specified in bytes.</p>","abstract":false,"args":[{"name":"memlimit","doc":null,"default_value":"","external_name":"memlimit","restriction":""}],"args_string":"(memlimit)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L47","def":{"name":"memlimit=","args":[{"name":"memlimit","doc":null,"default_value":"","external_name":"memlimit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@memlimit = memlimit"}},{"id":"mode:Mode?-instance-method","html_id":"mode:Mode?-instance-method","name":"mode","doc":"Used by and must be set before calling #derive_key","summary":"<p>Used by and must be set before calling #derive_key</p>","abstract":false,"args":[],"args_string":" : Mode?","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L46","def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mode | ::Nil","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:Mode?)-instance-method","html_id":"mode=(mode:Mode?)-instance-method","name":"mode=","doc":"Used by and must be set before calling #derive_key","summary":"<p>Used by and must be set before calling #derive_key</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode | ::Nil"}],"args_string":"(mode : Mode?)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L50","def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Mode | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"needs_rehash?(str):Bool-instance-method","html_id":"needs_rehash?(str):Bool-instance-method","name":"needs_rehash?","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str) : Bool","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L72","def":{"name":"needs_rehash?","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"case LibSodium.crypto_pwhash_str_needs_rehash(str, @opslimit, @memlimit)\nwhen 0\n  false\nwhen 1\n  true\nelse\n  raise(Sodium::Error.new(\"crypto_pwhash_str_needs_rehash\"))\nend"}},{"id":"opslimit:UInt64-instance-method","html_id":"opslimit:UInt64-instance-method","name":"opslimit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L41","def":{"name":"opslimit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@opslimit"}},{"id":"opslimit=(opslimit)-instance-method","html_id":"opslimit=(opslimit)-instance-method","name":"opslimit=","doc":null,"summary":null,"abstract":false,"args":[{"name":"opslimit","doc":null,"default_value":"","external_name":"opslimit","restriction":""}],"args_string":"(opslimit)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L45","def":{"name":"opslimit=","args":[{"name":"opslimit","doc":null,"default_value":"","external_name":"opslimit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@opslimit = opslimit"}},{"id":"random_salt-instance-method","html_id":"random_salt-instance-method","name":"random_salt","doc":"Returns a random salt for use with #derive_key","summary":"<p>Returns a random salt for use with #derive_key</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L112","def":{"name":"random_salt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Random::Secure.random_bytes(SALT_SIZE)"}},{"id":"verify(str,pass)-instance-method","html_id":"verify(str,pass)-instance-method","name":"verify","doc":"Verify a password against a stored String.\nraises PasswordVerifyError on failure.","summary":"<p>Verify a password against a stored String.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"args_string":"(str, pass)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L61","def":{"name":"verify","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""},{"name":"pass","doc":null,"default_value":"","external_name":"pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case LibSodium.crypto_pwhash_str_verify(str, pass, pass.bytesize)\nwhen 0\nelse\n  raise(PasswordVerifyError.new)\nend\nself\n"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash/Mode","path":"Sodium/Pwhash/Mode.html","kind":"enum","full_name":"Sodium::Pwhash::Mode","name":"Mode","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/didactic-drunk/sodium.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/didactic-drunk/sodium.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/pwhash.cr","line_number":29,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Argon2i13","name":"Argon2i13","value":"1","doc":null,"summary":null},{"id":"Argon2id13","name":"Argon2id13","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash","kind":"class","full_name":"Sodium::Pwhash","name":"Pwhash"},"doc":"Use the most recent algorithm Argon2id13 for new applications.","summary":"<p>Use the most recent algorithm Argon2id13 for new applications.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"argon2i13?-instance-method","html_id":"argon2i13?-instance-method","name":"argon2i13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L30","def":{"name":"argon2i13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Argon2i13"}},{"id":"argon2id13?-instance-method","html_id":"argon2id13?-instance-method","name":"argon2id13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L31","def":{"name":"argon2id13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Argon2id13"}},{"id":"default-instance-method","html_id":"default-instance-method","name":"default","doc":"The currently recommended algorithm, which can change from one version of libsodium to another.","summary":"<p>The currently recommended algorithm, which can change from one version of libsodium to another.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr#L34","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mode.new(LibSodium.crypto_pwhash_alg_default)"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash/PasswordVerifyError","path":"Sodium/Pwhash/PasswordVerifyError.html","kind":"class","full_name":"Sodium::Pwhash::PasswordVerifyError","name":"PasswordVerifyError","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Error","kind":"class","full_name":"Sodium::Error","name":"Error"},{"html_id":"github.com/didactic-drunk/sodium.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/pwhash.cr","line_number":11,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/pwhash.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Pwhash","kind":"class","full_name":"Sodium::Pwhash","name":"Pwhash"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/SecretBox","path":"Sodium/SecretBox.html","kind":"class","full_name":"Sodium::SecretBox","name":"SecretBox","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/secret_box.cr","line_number":18,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_secretbox_keybytes.to_i","doc":null,"summary":null},{"id":"MAC_SIZE","name":"MAC_SIZE","value":"LibSodium.crypto_secretbox_macbytes.to_i","doc":null,"summary":null},{"id":"NONCE_SIZE","name":"NONCE_SIZE","value":"LibSodium.crypto_secretbox_noncebytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"[https://libsodium.gitbook.io/doc/secret-key_cryptography](https://libsodium.gitbook.io/doc/secret-key_cryptography)\n\n\n```crystal\nkey = Sodium::SecretBox.new\nmessage = \"foobar\"\nencrypted, nonce = key.encrypt message\n\n# On the other side.\nkey = Sodium::SecretBox.new key\nmessage = key.decrypt encrypted, nonce\n```","summary":"<p><a href=\"https://libsodium.gitbook.io/doc/secret-key_cryptography\" target=\"_blank\">https://libsodium.gitbook.io/doc/secret-key_cryptography</a></p>","class_methods":[],"constructors":[{"id":"new(buf:SecureBuffer)-class-method","html_id":"new(buf:SecureBuffer)-class-method","name":"new","doc":"Use an existing SecureBuffer.","summary":"<p>Use an existing SecureBuffer.</p>","abstract":false,"args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"SecureBuffer"}],"args_string":"(buf : SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L32","def":{"name":"new","args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(buf)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Copy bytes to a new SecureBuffer\n\nOptionally erases bytes after copying if erase is set.","summary":"<p>Copy bytes to a new SecureBuffer</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L42","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generate a new random key held in a SecureBuffer.","summary":"<p>Generate a new random key held in a SecureBuffer.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L27","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"decrypt(src:Bytes,dst:Bytes,nonce:Nonce):Bytes-instance-method","html_id":"decrypt(src:Bytes,dst:Bytes,nonce:Nonce):Bytes-instance-method","name":"decrypt","doc":"Returns decrypted message.\n\nOptionally supply a destination buffer.","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"args_string":"(src : Bytes, dst : Bytes, nonce : Nonce) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L79","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"if dst.bytesize != (src.bytesize - MAC_SIZE)\n  raise(ArgumentError.new(\"dst.bytesize must be src.bytesize - MAC_SIZE, got #{dst.bytesize}\"))\nend\nif (LibSodium.crypto_secretbox_open_easy(dst, src, src.bytesize, nonce.to_slice, self.to_slice)) != 0\n  raise(Sodium::Error::DecryptionFailed.new(\"crypto_secretbox_easy\"))\nend\ndst\n"}},{"id":"decrypt(src:Bytes,nonce:Nonce):Bytes-instance-method","html_id":"decrypt(src:Bytes,nonce:Nonce):Bytes-instance-method","name":"decrypt","doc":"Returns decrypted message.","summary":"<p>Returns decrypted message.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"args_string":"(src : Bytes, nonce : Nonce) : Bytes","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L69","def":{"name":"decrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Nonce"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"dst_size = src.bytesize - MAC_SIZE\nif dst_size <= 0\n  raise(Sodium::Error::DecryptionFailed.new(\"encrypted data too small #{src.bytesize}\"))\nend\ndst = Bytes.new(dst_size)\ndecrypt(src, dst, nonce)\n"}},{"id":"encrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize+MAC_SIZE),nonce:Nonce=Nonce.random):::Tuple(Bytes,Nonce)-instance-method","html_id":"encrypt(src:Bytes,dst:Bytes=Bytes.new(src.bytesize+MAC_SIZE),nonce:Nonce=Nonce.random):::Tuple(Bytes,Nonce)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}\n\nOptionally supply a destination buffer.","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":"Nonce"}],"args_string":"(src : Bytes, dst : Bytes = <span class=\"t\">Bytes</span>.<span class=\"k\">new</span>(src.bytesize <span class=\"o\">+</span> <span class=\"t\">MAC_SIZE</span>), nonce : Nonce = <span class=\"t\">Nonce</span>.random) : ::Tuple(Bytes, Nonce)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L57","def":{"name":"encrypt","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Bytes"},{"name":"dst","doc":null,"default_value":"Bytes.new(src.bytesize + MAC_SIZE)","external_name":"dst","restriction":"Bytes"},{"name":"nonce","doc":null,"default_value":"Nonce.random","external_name":"nonce","restriction":"Nonce"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Bytes, Nonce)","visibility":"Public","body":"if dst.bytesize != (src.bytesize + MAC_SIZE)\n  raise(ArgumentError.new(\"dst.bytesize must be src.bytesize + MAC_SIZE, got #{dst.bytesize}\"))\nend\nnonce.used!\nif (LibSodium.crypto_secretbox_easy(dst, src, src.bytesize, nonce.to_slice, self.to_slice)) != 0\n  raise(Sodium::Error.new(\"crypto_secretbox_easy\"))\nend\n{dst, nonce}\n"}},{"id":"encrypt(data)-instance-method","html_id":"encrypt(data)-instance-method","name":"encrypt","doc":"Encrypts data and returns {ciphertext, nonce}","summary":"<p>Encrypts data and returns {ciphertext, nonce}</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"args_string":"(data)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L50","def":{"name":"encrypt","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encrypt(data.to_slice)"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L24","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@buf.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secret_box.cr#L24","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@buf.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/SecureBuffer","path":"Sodium/SecureBuffer.html","kind":"class","full_name":"Sodium::SecureBuffer","name":"SecureBuffer","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/secure_buffer.cr","line_number":6,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":"Allocate guarded memory using [sodium_malloc](https://libsodium.gitbook.io/doc/memory_management)","summary":"<p>Allocate guarded memory using <a href=\"https://libsodium.gitbook.io/doc/memory_management\" target=\"_blank\">sodium_malloc</a></p>","class_methods":[{"id":"random(size)-class-method","html_id":"random(size)-class-method","name":"random","doc":"Returns a **readonly** random SecureBuffer.","summary":"<p>Returns a <strong>readonly</strong> random SecureBuffer.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L16","def":{"name":"random","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buf = new(size)\nRandom::Secure.random_bytes(buf.to_slice)\nbuf.readonly\n"}}],"constructors":[{"id":"new(bytesize:Int32)-class-method","html_id":"new(bytesize:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int32"}],"args_string":"(bytesize : Int32)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L11","def":{"name":"new","args":[{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytesize)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bytes:Bytes,erase=false)-class-method","html_id":"new(bytes:Bytes,erase=false)-class-method","name":"new","doc":"Copies bytes to a **readonly** SecureBuffer.\nOptionally erases bytes after copying if erase is set","summary":"<p>Copies bytes to a <strong>readonly</strong> SecureBuffer.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L24","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"+(*args,**options)-instance-method","html_id":"+(*args,**options)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L9","def":{"name":"+","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.+(*args, **options)"}},{"id":"+(*args,**options,&block)-instance-method","html_id":"+(*args,**options,&amp;block)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L9","def":{"name":"+","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice.+(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Timing safe memory compare.","summary":"<p>Timing safe memory compare.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L86","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Sodium.memcmp(self.to_slice, other.to_slice)"}},{"id":"==(other:Bytes)-instance-method","html_id":"==(other:Bytes)-instance-method","name":"==","doc":"Timing safe memory compare.","summary":"<p>Timing safe memory compare.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"args_string":"(other : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L91","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Sodium.memcmp(self.to_slice, other)"}},{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L9","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L9","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"[]=(*args,**options)-instance-method","html_id":"[]=(*args,**options)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L9","def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice[*args] = **options"}},{"id":"bytesize:Int32-instance-method","html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L7","def":{"name":"bytesize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytesize"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L57","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L44","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.sodium_free(@ptr)"}},{"id":"noaccess-instance-method","html_id":"noaccess-instance-method","name":"noaccess","doc":"Makes a region allocated using sodium_malloc() or sodium_allocarray() inaccessible. It cannot be read or written, but the data are preserved.","summary":"<p>Makes a region allocated using sodium_malloc() or sodium_allocarray() inaccessible.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L62","def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (LibSodium.sodium_mprotect_noaccess(@ptr)) != 0\n  raise(\"sodium_mprotect_noaccess\")\nend\nself\n"}},{"id":"readonly-instance-method","html_id":"readonly-instance-method","name":"readonly","doc":"Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.","summary":"<p>Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L70","def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (LibSodium.sodium_mprotect_readonly(@ptr)) != 0\n  raise(\"sodium_mprotect_readonly\")\nend\nself\n"}},{"id":"readwrite-instance-method","html_id":"readwrite-instance-method","name":"readwrite","doc":"Marks a region allocated using sodium_malloc() or sodium_allocarray() as readable and writable, after having been protected using sodium_mprotect_readonly() or sodium_mprotect_noaccess().","summary":"<p>Marks a region allocated using sodium_malloc() or sodium_allocarray() as readable and writable, after having been protected using sodium_mprotect_readonly() or sodium_mprotect_noaccess().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L78","def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (LibSodium.sodium_mprotect_readwrite(@ptr)) != 0\n  raise(\"sodium_mprotect_readwrite\")\nend\nself\n"}},{"id":"to_slice-instance-method","html_id":"to_slice-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L49","def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Slice(UInt8).new(@ptr, @bytesize)"}},{"id":"to_unsafe:Pointer(UInt8)-instance-method","html_id":"to_unsafe:Pointer(UInt8)-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Pointer(UInt8)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L53","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ptr"}},{"id":"wipe-instance-method","html_id":"wipe-instance-method","name":"wipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/secure_buffer.cr#L39","def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"readwrite\nSodium.memzero(self.to_slice)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign","path":"Sodium/Sign.html","kind":"module","full_name":"Sodium::Sign","name":"Sign","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/sign/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/PublicKey","path":"Sodium/Sign/PublicKey.html","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/sign/public_key.cr","line_number":4,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_sign_publickeybytes.to_i","doc":null,"summary":null},{"id":"SIG_SIZE","name":"SIG_SIZE","value":"LibSodium.crypto_sign_bytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign","kind":"module","full_name":"Sodium::Sign","name":"Sign"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(bytes:Bytes)-class-method","html_id":"new(bytes:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L17","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L9","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L9","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@bytes.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"verify_detached(message:Bytes,sig:Bytes)-instance-method","html_id":"verify_detached(message:Bytes,sig:Bytes)-instance-method","name":"verify_detached","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"args_string":"(message : Bytes, sig : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L29","def":{"name":"verify_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sig.bytesize != SIG_SIZE\n  raise(ArgumentError.new(\"Signature must be #{SIG_SIZE} bytes, got #{sig.bytesize}\"))\nend\nv = LibSodium.crypto_sign_verify_detached(sig, message, message.bytesize, @bytes)\nif v != 0\n  raise(Sodium::Error::VerificationFailed.new(\"crypto_sign_verify_detached\"))\nend\n"}},{"id":"verify_detached(message,sig:Bytes)-instance-method","html_id":"verify_detached(message,sig:Bytes)-instance-method","name":"verify_detached","doc":"Verify signature made by `secret_key.sign_detached(message)`\nRaises on verification failure.","summary":"<p>Verify signature made by <code>secret_key.sign_detached(message)</code> Raises on verification failure.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"args_string":"(message, sig : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L25","def":{"name":"verify_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"sig","doc":null,"default_value":"","external_name":"sig","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"verify_detached(message.to_slice, sig)"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/PublicKey/SerializeConverter","path":"Sodium/Sign/PublicKey/SerializeConverter.html","kind":"module","full_name":"Sodium::Sign::PublicKey::SerializeConverter","name":"SerializeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/sign/public_key.cr","line_number":38,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/PublicKey","kind":"class","full_name":"Sodium::Sign::PublicKey","name":"PublicKey"},"doc":null,"summary":null,"class_methods":[{"id":"from_json(value:JSON::PullParser):PublicKey-class-method","html_id":"from_json(value:JSON::PullParser):PublicKey-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"args_string":"(value : JSON::PullParser) : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L43","def":{"name":"from_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"PublicKey.new(Base64.decode(value.read_string))"}},{"id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):PublicKey-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L51","def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.class}\")\nend\nPublicKey.new(Base64.decode(node.value))\n"}},{"id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","html_id":"to_json(value:PublicKey,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : PublicKey, json : JSON::Builder)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L39","def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value.to_slice))"}},{"id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","html_id":"to_yaml(value:PublicKey,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : PublicKey, yaml : YAML::Nodes::Builder)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/public_key.cr#L47","def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PublicKey"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(Base64.strict_encode(value.to_slice))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign/SecretKey","path":"Sodium/Sign/SecretKey.html","kind":"class","full_name":"Sodium::Sign::SecretKey","name":"SecretKey","abstract":false,"superclass":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},"ancestors":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},{"html_id":"github.com/didactic-drunk/sodium.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/didactic-drunk/sodium.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"sodium/sign/secret_key.cr","line_number":16,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"KEY_SIZE","name":"KEY_SIZE","value":"LibSodium.crypto_sign_secretkeybytes.to_i","doc":null,"summary":null},{"id":"SEED_SIZE","name":"SEED_SIZE","value":"LibSodium.crypto_sign_seedbytes.to_i","doc":null,"summary":null},{"id":"SIG_SIZE","name":"SIG_SIZE","value":"LibSodium.crypto_sign_bytes.to_i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Sign","kind":"module","full_name":"Sodium::Sign","name":"Sign"},"doc":"Ed25519 secret key used for signing.\n\n[https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures](https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures)\n\nUsage:\n```\nkey = Sodium::Sign::SecretKey.new\nsig = key.sign_detached data\nkey.public_key.verify_detached data, sig\n```","summary":"<p>Ed25519 secret key used for signing.</p>","class_methods":[],"constructors":[{"id":"new(bytes:Bytes,pkey:Bytes?=nil,*,erase=false)-class-method","html_id":"new(bytes:Bytes,pkey:Bytes?=nil,*,erase=false)-class-method","name":"new","doc":"Use existing secret and public keys.\nCopies secret key to a SecureBuffer.\nRecomputes the public key from a secret key if missing.","summary":"<p>Use existing secret and public keys.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(bytes : Bytes, pkey : Bytes? = <span class=\"n\">nil</span>, *, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L40","def":{"name":"new","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"pkey","doc":null,"default_value":"nil","external_name":"pkey","restriction":"Bytes | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(bytes, pkey, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Generates a new random secret/public key pair.","summary":"<p>Generates a new random secret/public key pair.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L29","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:Bytes,erase=false)-class-method","html_id":"new(*,seed:Bytes,erase=false)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.\nCopies seed to a SecureBuffer.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"args_string":"(*, seed : Bytes, erase = <span class=\"n\">false</span>)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L56","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"Bytes"},{"name":"erase","doc":null,"default_value":"false","external_name":"erase","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed, erase: erase)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*,seed:SecureBuffer)-class-method","html_id":"new(*,seed:SecureBuffer)-class-method","name":"new","doc":"Derive a new secret/public key pair based on a consistent seed.","summary":"<p>Derive a new secret/public key pair based on a consistent seed.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"args_string":"(*, seed : SecureBuffer)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L62","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":"SecureBuffer"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed: seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"public_key:PublicKey-instance-method","html_id":"public_key:PublicKey-instance-method","name":"public_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PublicKey","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L23","def":{"name":"public_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PublicKey","visibility":"Public","body":"@public_key"}},{"id":"sign_detached(message:Bytes)-instance-method","html_id":"sign_detached(message:Bytes)-instance-method","name":"sign_detached","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"}],"args_string":"(message : Bytes)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L79","def":{"name":"sign_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sig = Bytes.new(SIG_SIZE)\nif (LibSodium.crypto_sign_detached(sig, out sig_len, message, message.bytesize, self.to_slice)) != 0\n  raise(Error.new(\"crypto_sign_detached\"))\nend\nsig\n"}},{"id":"sign_detached(message)-instance-method","html_id":"sign_detached(message)-instance-method","name":"sign_detached","doc":"Signs message and returns a detached signature.\nVerify using `secret_key.public_key.verify_detached(message, sig)`","summary":"<p>Signs message and returns a detached signature.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L75","def":{"name":"sign_detached","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sign_detached(message.to_slice)"}},{"id":"to_slice(*args,**options)-instance-method","html_id":"to_slice(*args,**options)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L24","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options)"}},{"id":"to_slice(*args,**options,&block)-instance-method","html_id":"to_slice(*args,**options,&amp;block)-instance-method","name":"to_slice","doc":"Returns key","summary":"<p>Returns key</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/sign/secret_key.cr#L24","def":{"name":"to_slice","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@sbuf.to_slice(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","path":"Sodium/Wipe.html","kind":"module","full_name":"Sodium::Wipe","name":"Wipe","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/wipe.cr","line_number":1,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/wipe.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/CryptoBox","kind":"class","full_name":"Sodium::CryptoBox","name":"CryptoBox"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Digest/Blake2b","kind":"class","full_name":"Sodium::Digest::Blake2b","name":"Blake2b"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Kdf","kind":"class","full_name":"Sodium::Kdf","name":"Kdf"},{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Key","kind":"class","full_name":"Sodium::Key","name":"Key"}],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium","kind":"module","full_name":"Sodium","name":"Sodium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/wipe.cr#L7","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  return\nend\nwipe\n@closed = true\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/wipe.cr#L33","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"wipe"}}],"macros":[],"types":[{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe/Var","path":"Sodium/Wipe/Var.html","kind":"annotation","full_name":"Sodium::Wipe::Var","name":"Var","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"sodium/wipe.cr","line_number":2,"url":"https://github.com/didactic-drunk/sodium.cr/blob/a825d610396cd7145aa58870d79e05326891e1a6/src/sodium/wipe.cr"}],"repository_name":"github.com/didactic-drunk/sodium.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/didactic-drunk/sodium.cr/Sodium/Wipe","kind":"module","full_name":"Sodium::Wipe","name":"Wipe"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}}